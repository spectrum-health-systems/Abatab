id: AbatabData
language: CSharp
name:
  Default: AbatabData
qualifiedName:
  Default: AbatabData
type: Assembly
modifiers: {}
items:
- id: AbatabData
  commentId: N:AbatabData
  language: CSharp
  name:
    CSharp: AbatabData
    VB: AbatabData
  nameWithType:
    CSharp: AbatabData
    VB: AbatabData
  qualifiedName:
    CSharp: AbatabData
    VB: AbatabData
  type: Namespace
  assemblies:
  - AbatabData
  modifiers: {}
  items:
  - id: AbatabData.Session
    commentId: T:AbatabData.Session
    language: CSharp
    name:
      CSharp: Session
      VB: Session
    nameWithType:
      CSharp: Session
      VB: Session
    qualifiedName:
      CSharp: AbatabData.Session
      VB: AbatabData.Session
    type: Class
    assemblies:
    - AbatabData
    namespace: AbatabData
    source:
      id: Session
      path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Session.cs
      startLine: 12
    summary: "\nDefines the properties for the AbatabData.Session object, containing the information/data that Abatab needs to do its job.\n"
    example: []
    syntax:
      content:
        CSharp: public class Session
        VB: Public Class Session
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AbatabData.Session.AbatabMode
      commentId: P:AbatabData.Session.AbatabMode
      language: CSharp
      name:
        CSharp: AbatabMode
        VB: AbatabMode
      nameWithType:
        CSharp: Session.AbatabMode
        VB: Session.AbatabMode
      qualifiedName:
        CSharp: AbatabData.Session.AbatabMode
        VB: AbatabData.Session.AbatabMode
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData
      source:
        id: AbatabMode
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Session.cs
        startLine: 18
      summary: "\nThe default behavior of Abatab. <a href=\"https://spectrum-health-systems.github.io/Abatab/man/man-configuration-local-settings.html#abatabmode\"> [more info]</a>\n"
      example: []
      syntax:
        content:
          CSharp: public string AbatabMode { get; set; }
          VB: Public Property AbatabMode As String
        parameters: []
        return:
          type: System.String
          description: Default value is <code>enabled</code>.
      overload: AbatabData.Session.AbatabMode*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Session.AbatabRoot
      commentId: P:AbatabData.Session.AbatabRoot
      language: CSharp
      name:
        CSharp: AbatabRoot
        VB: AbatabRoot
      nameWithType:
        CSharp: Session.AbatabRoot
        VB: Session.AbatabRoot
      qualifiedName:
        CSharp: AbatabData.Session.AbatabRoot
        VB: AbatabData.Session.AbatabRoot
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData
      source:
        id: AbatabRoot
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Session.cs
        startLine: 24
      summary: "\nThe Abatab root directory. <a href=\"https://spectrum-health-systems.github.io/Abatab/man/man-configuration-local-settings.html#abatabroot\">. [more info]</a>\n"
      example: []
      syntax:
        content:
          CSharp: public string AbatabRoot { get; set; }
          VB: Public Property AbatabRoot As String
        parameters: []
        return:
          type: System.String
          description: Default value is <code>C:\Abatab_</code>.
      overload: AbatabData.Session.AbatabRoot*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Session.AvatarEnvironment
      commentId: P:AbatabData.Session.AvatarEnvironment
      language: CSharp
      name:
        CSharp: AvatarEnvironment
        VB: AvatarEnvironment
      nameWithType:
        CSharp: Session.AvatarEnvironment
        VB: Session.AvatarEnvironment
      qualifiedName:
        CSharp: AbatabData.Session.AvatarEnvironment
        VB: AbatabData.Session.AvatarEnvironment
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData
      source:
        id: AvatarEnvironment
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Session.cs
        startLine: 30
      summary: "\nThe current Avatar environment. <a href=\"https://spectrum-health-systems.github.io/Abatab/man/man-configuration-local-settings.html#avatarenvironment\">. [more info]</a>\n"
      example: []
      syntax:
        content:
          CSharp: public string AvatarEnvironment { get; set; }
          VB: Public Property AvatarEnvironment As String
        parameters: []
        return:
          type: System.String
          description: Default value is <code>LIVE</code>.
      overload: AbatabData.Session.AvatarEnvironment*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Session.AbatabFallbackUserName
      commentId: P:AbatabData.Session.AbatabFallbackUserName
      language: CSharp
      name:
        CSharp: AbatabFallbackUserName
        VB: AbatabFallbackUserName
      nameWithType:
        CSharp: Session.AbatabFallbackUserName
        VB: Session.AbatabFallbackUserName
      qualifiedName:
        CSharp: AbatabData.Session.AbatabFallbackUserName
        VB: AbatabData.Session.AbatabFallbackUserName
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData
      source:
        id: AbatabFallbackUserName
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Session.cs
        startLine: 36
      summary: "\nThe current Avatar environment. <a href=\"https://spectrum-health-systems.github.io/Abatab/man/man-configuration-local-settings.html#abatabfallbackusername\">. [more info]</a>\n"
      example: []
      syntax:
        content:
          CSharp: public string AbatabFallbackUserName { get; set; }
          VB: Public Property AbatabFallbackUserName As String
        parameters: []
        return:
          type: System.String
          description: Default value is <code>_Abatab</code>.
      overload: AbatabData.Session.AbatabFallbackUserName*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Session.DebugglerConfig
      commentId: P:AbatabData.Session.DebugglerConfig
      language: CSharp
      name:
        CSharp: DebugglerConfig
        VB: DebugglerConfig
      nameWithType:
        CSharp: Session.DebugglerConfig
        VB: Session.DebugglerConfig
      qualifiedName:
        CSharp: AbatabData.Session.DebugglerConfig
        VB: AbatabData.Session.DebugglerConfig
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData
      source:
        id: DebugglerConfig
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Session.cs
        startLine: 42
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public Debuggler DebugglerConfig { get; set; }
          VB: Public Property DebugglerConfig As Debuggler
        parameters: []
        return:
          type: AbatabData.Core.Debuggler
          description: ''
      overload: AbatabData.Session.DebugglerConfig*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Session.LoggingConfig
      commentId: P:AbatabData.Session.LoggingConfig
      language: CSharp
      name:
        CSharp: LoggingConfig
        VB: LoggingConfig
      nameWithType:
        CSharp: Session.LoggingConfig
        VB: Session.LoggingConfig
      qualifiedName:
        CSharp: AbatabData.Session.LoggingConfig
        VB: AbatabData.Session.LoggingConfig
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData
      source:
        id: LoggingConfig
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Session.cs
        startLine: 48
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public Logging LoggingConfig { get; set; }
          VB: Public Property LoggingConfig As Logging
        parameters: []
        return:
          type: AbatabData.Core.Logging
          description: ''
      overload: AbatabData.Session.LoggingConfig*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Session.ModCommonConfig
      commentId: P:AbatabData.Session.ModCommonConfig
      language: CSharp
      name:
        CSharp: ModCommonConfig
        VB: ModCommonConfig
      nameWithType:
        CSharp: Session.ModCommonConfig
        VB: Session.ModCommonConfig
      qualifiedName:
        CSharp: AbatabData.Session.ModCommonConfig
        VB: AbatabData.Session.ModCommonConfig
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData
      source:
        id: ModCommonConfig
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Session.cs
        startLine: 54
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public Common ModCommonConfig { get; set; }
          VB: Public Property ModCommonConfig As Common
        parameters: []
        return:
          type: AbatabData.Module.Common
          description: ''
      overload: AbatabData.Session.ModCommonConfig*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Session.ModPrototypeConfig
      commentId: P:AbatabData.Session.ModPrototypeConfig
      language: CSharp
      name:
        CSharp: ModPrototypeConfig
        VB: ModPrototypeConfig
      nameWithType:
        CSharp: Session.ModPrototypeConfig
        VB: Session.ModPrototypeConfig
      qualifiedName:
        CSharp: AbatabData.Session.ModPrototypeConfig
        VB: AbatabData.Session.ModPrototypeConfig
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData
      source:
        id: ModPrototypeConfig
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Session.cs
        startLine: 60
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public Prototype ModPrototypeConfig { get; set; }
          VB: Public Property ModPrototypeConfig As Prototype
        parameters: []
        return:
          type: AbatabData.Module.Prototype
          description: ''
      overload: AbatabData.Session.ModPrototypeConfig*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Session.ModQuickMedOrderConfig
      commentId: P:AbatabData.Session.ModQuickMedOrderConfig
      language: CSharp
      name:
        CSharp: ModQuickMedOrderConfig
        VB: ModQuickMedOrderConfig
      nameWithType:
        CSharp: Session.ModQuickMedOrderConfig
        VB: Session.ModQuickMedOrderConfig
      qualifiedName:
        CSharp: AbatabData.Session.ModQuickMedOrderConfig
        VB: AbatabData.Session.ModQuickMedOrderConfig
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData
      source:
        id: ModQuickMedOrderConfig
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Session.cs
        startLine: 66
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public QuickMedOrder ModQuickMedOrderConfig { get; set; }
          VB: Public Property ModQuickMedOrderConfig As QuickMedOrder
        parameters: []
        return:
          type: AbatabData.Module.QuickMedOrder
          description: ''
      overload: AbatabData.Session.ModQuickMedOrderConfig*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Session.ModTestingConfig
      commentId: P:AbatabData.Session.ModTestingConfig
      language: CSharp
      name:
        CSharp: ModTestingConfig
        VB: ModTestingConfig
      nameWithType:
        CSharp: Session.ModTestingConfig
        VB: Session.ModTestingConfig
      qualifiedName:
        CSharp: AbatabData.Session.ModTestingConfig
        VB: AbatabData.Session.ModTestingConfig
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData
      source:
        id: ModTestingConfig
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Session.cs
        startLine: 72
      summary: "\nProperties for the <a href=\"https://spectrum-health-systems.github.io/Abatab/api/AbatabData.Module.Testing.html\"> Abatab Testing Module.</a>\n"
      example: []
      syntax:
        content:
          CSharp: public Testing ModTestingConfig { get; set; }
          VB: Public Property ModTestingConfig As Testing
        parameters: []
        return:
          type: AbatabData.Module.Testing
          description: See documentation for the <a href="https://spectrum-health-systems.github.io/Abatab/api/AbatabData.Module.Testing.html"> Abatab Testing Module.</a>
      overload: AbatabData.Session.ModTestingConfig*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Session.SessionDateStamp
      commentId: P:AbatabData.Session.SessionDateStamp
      language: CSharp
      name:
        CSharp: SessionDateStamp
        VB: SessionDateStamp
      nameWithType:
        CSharp: Session.SessionDateStamp
        VB: Session.SessionDateStamp
      qualifiedName:
        CSharp: AbatabData.Session.SessionDateStamp
        VB: AbatabData.Session.SessionDateStamp
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData
      source:
        id: SessionDateStamp
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Session.cs
        startLine: 78
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string SessionDateStamp { get; set; }
          VB: Public Property SessionDateStamp As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Session.SessionDateStamp*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Session.SessionTimeStamp
      commentId: P:AbatabData.Session.SessionTimeStamp
      language: CSharp
      name:
        CSharp: SessionTimeStamp
        VB: SessionTimeStamp
      nameWithType:
        CSharp: Session.SessionTimeStamp
        VB: Session.SessionTimeStamp
      qualifiedName:
        CSharp: AbatabData.Session.SessionTimeStamp
        VB: AbatabData.Session.SessionTimeStamp
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData
      source:
        id: SessionTimeStamp
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Session.cs
        startLine: 84
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string SessionTimeStamp { get; set; }
          VB: Public Property SessionTimeStamp As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Session.SessionTimeStamp*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Session.AbatabUserName
      commentId: P:AbatabData.Session.AbatabUserName
      language: CSharp
      name:
        CSharp: AbatabUserName
        VB: AbatabUserName
      nameWithType:
        CSharp: Session.AbatabUserName
        VB: Session.AbatabUserName
      qualifiedName:
        CSharp: AbatabData.Session.AbatabUserName
        VB: AbatabData.Session.AbatabUserName
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData
      source:
        id: AbatabUserName
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Session.cs
        startLine: 90
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string AbatabUserName { get; set; }
          VB: Public Property AbatabUserName As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Session.AbatabUserName*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Session.AbatabRequest
      commentId: P:AbatabData.Session.AbatabRequest
      language: CSharp
      name:
        CSharp: AbatabRequest
        VB: AbatabRequest
      nameWithType:
        CSharp: Session.AbatabRequest
        VB: Session.AbatabRequest
      qualifiedName:
        CSharp: AbatabData.Session.AbatabRequest
        VB: AbatabData.Session.AbatabRequest
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData
      source:
        id: AbatabRequest
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Session.cs
        startLine: 96
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string AbatabRequest { get; set; }
          VB: Public Property AbatabRequest As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Session.AbatabRequest*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Session.AbatabModule
      commentId: P:AbatabData.Session.AbatabModule
      language: CSharp
      name:
        CSharp: AbatabModule
        VB: AbatabModule
      nameWithType:
        CSharp: Session.AbatabModule
        VB: Session.AbatabModule
      qualifiedName:
        CSharp: AbatabData.Session.AbatabModule
        VB: AbatabData.Session.AbatabModule
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData
      source:
        id: AbatabModule
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Session.cs
        startLine: 102
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string AbatabModule { get; set; }
          VB: Public Property AbatabModule As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Session.AbatabModule*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Session.AbatabCommand
      commentId: P:AbatabData.Session.AbatabCommand
      language: CSharp
      name:
        CSharp: AbatabCommand
        VB: AbatabCommand
      nameWithType:
        CSharp: Session.AbatabCommand
        VB: Session.AbatabCommand
      qualifiedName:
        CSharp: AbatabData.Session.AbatabCommand
        VB: AbatabData.Session.AbatabCommand
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData
      source:
        id: AbatabCommand
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Session.cs
        startLine: 108
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string AbatabCommand { get; set; }
          VB: Public Property AbatabCommand As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Session.AbatabCommand*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Session.AbatabAction
      commentId: P:AbatabData.Session.AbatabAction
      language: CSharp
      name:
        CSharp: AbatabAction
        VB: AbatabAction
      nameWithType:
        CSharp: Session.AbatabAction
        VB: Session.AbatabAction
      qualifiedName:
        CSharp: AbatabData.Session.AbatabAction
        VB: AbatabData.Session.AbatabAction
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData
      source:
        id: AbatabAction
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Session.cs
        startLine: 114
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string AbatabAction { get; set; }
          VB: Public Property AbatabAction As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Session.AbatabAction*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Session.AbatabOption
      commentId: P:AbatabData.Session.AbatabOption
      language: CSharp
      name:
        CSharp: AbatabOption
        VB: AbatabOption
      nameWithType:
        CSharp: Session.AbatabOption
        VB: Session.AbatabOption
      qualifiedName:
        CSharp: AbatabData.Session.AbatabOption
        VB: AbatabData.Session.AbatabOption
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData
      source:
        id: AbatabOption
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Session.cs
        startLine: 120
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string AbatabOption { get; set; }
          VB: Public Property AbatabOption As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Session.AbatabOption*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Session.SentOptObj
      commentId: P:AbatabData.Session.SentOptObj
      language: CSharp
      name:
        CSharp: SentOptObj
        VB: SentOptObj
      nameWithType:
        CSharp: Session.SentOptObj
        VB: Session.SentOptObj
      qualifiedName:
        CSharp: AbatabData.Session.SentOptObj
        VB: AbatabData.Session.SentOptObj
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData
      source:
        id: SentOptObj
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Session.cs
        startLine: 126
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public OptionObject2015 SentOptObj { get; set; }
          VB: Public Property SentOptObj As OptionObject2015
        parameters: []
        return:
          type: NTST.ScriptLinkService.Objects.OptionObject2015
          description: ''
      overload: AbatabData.Session.SentOptObj*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Session.WorkOptObj
      commentId: P:AbatabData.Session.WorkOptObj
      language: CSharp
      name:
        CSharp: WorkOptObj
        VB: WorkOptObj
      nameWithType:
        CSharp: Session.WorkOptObj
        VB: Session.WorkOptObj
      qualifiedName:
        CSharp: AbatabData.Session.WorkOptObj
        VB: AbatabData.Session.WorkOptObj
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData
      source:
        id: WorkOptObj
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Session.cs
        startLine: 133
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public OptionObject2015 WorkOptObj { get; set; }
          VB: Public Property WorkOptObj As OptionObject2015
        parameters: []
        return:
          type: NTST.ScriptLinkService.Objects.OptionObject2015
          description: ''
      overload: AbatabData.Session.WorkOptObj*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Session.FinalOptObj
      commentId: P:AbatabData.Session.FinalOptObj
      language: CSharp
      name:
        CSharp: FinalOptObj
        VB: FinalOptObj
      nameWithType:
        CSharp: Session.FinalOptObj
        VB: Session.FinalOptObj
      qualifiedName:
        CSharp: AbatabData.Session.FinalOptObj
        VB: AbatabData.Session.FinalOptObj
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData
      source:
        id: FinalOptObj
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Session.cs
        startLine: 139
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public OptionObject2015 FinalOptObj { get; set; }
          VB: Public Property FinalOptObj As OptionObject2015
        parameters: []
        return:
          type: NTST.ScriptLinkService.Objects.OptionObject2015
          description: ''
      overload: AbatabData.Session.FinalOptObj*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
- id: AbatabData.Core
  commentId: N:AbatabData.Core
  language: CSharp
  name:
    CSharp: AbatabData.Core
    VB: AbatabData.Core
  nameWithType:
    CSharp: AbatabData.Core
    VB: AbatabData.Core
  qualifiedName:
    CSharp: AbatabData.Core
    VB: AbatabData.Core
  type: Namespace
  assemblies:
  - AbatabData
  modifiers: {}
  items:
  - id: AbatabData.Core.Debuggler
    commentId: T:AbatabData.Core.Debuggler
    language: CSharp
    name:
      CSharp: Debuggler
      VB: Debuggler
    nameWithType:
      CSharp: Debuggler
      VB: Debuggler
    qualifiedName:
      CSharp: AbatabData.Core.Debuggler
      VB: AbatabData.Core.Debuggler
    type: Class
    assemblies:
    - AbatabData
    namespace: AbatabData.Core
    source:
      id: Debuggler
      path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Core\Debuggler.cs
      startLine: 10
    summary: "\n\n"
    example: []
    syntax:
      content:
        CSharp: public class Debuggler
        VB: Public Class Debuggler
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AbatabData.Core.Debuggler.Mode
      commentId: P:AbatabData.Core.Debuggler.Mode
      language: CSharp
      name:
        CSharp: Mode
        VB: Mode
      nameWithType:
        CSharp: Debuggler.Mode
        VB: Debuggler.Mode
      qualifiedName:
        CSharp: AbatabData.Core.Debuggler.Mode
        VB: AbatabData.Core.Debuggler.Mode
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Core
      source:
        id: Mode
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Core\Debuggler.cs
        startLine: 16
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string Mode { get; set; }
          VB: Public Property Mode As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Core.Debuggler.Mode*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Core.Debuggler.DebugEventRoot
      commentId: P:AbatabData.Core.Debuggler.DebugEventRoot
      language: CSharp
      name:
        CSharp: DebugEventRoot
        VB: DebugEventRoot
      nameWithType:
        CSharp: Debuggler.DebugEventRoot
        VB: Debuggler.DebugEventRoot
      qualifiedName:
        CSharp: AbatabData.Core.Debuggler.DebugEventRoot
        VB: AbatabData.Core.Debuggler.DebugEventRoot
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Core
      source:
        id: DebugEventRoot
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Core\Debuggler.cs
        startLine: 22
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string DebugEventRoot { get; set; }
          VB: Public Property DebugEventRoot As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Core.Debuggler.DebugEventRoot*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: AbatabData.Core.Logging
    commentId: T:AbatabData.Core.Logging
    language: CSharp
    name:
      CSharp: Logging
      VB: Logging
    nameWithType:
      CSharp: Logging
      VB: Logging
    qualifiedName:
      CSharp: AbatabData.Core.Logging
      VB: AbatabData.Core.Logging
    type: Class
    assemblies:
    - AbatabData
    namespace: AbatabData.Core
    source:
      id: Logging
      path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Core\Logging.cs
      startLine: 10
    summary: "\n\n"
    example: []
    syntax:
      content:
        CSharp: public class Logging
        VB: Public Class Logging
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AbatabData.Core.Logging.Detail
      commentId: P:AbatabData.Core.Logging.Detail
      language: CSharp
      name:
        CSharp: Detail
        VB: Detail
      nameWithType:
        CSharp: Logging.Detail
        VB: Logging.Detail
      qualifiedName:
        CSharp: AbatabData.Core.Logging.Detail
        VB: AbatabData.Core.Logging.Detail
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Core
      source:
        id: Detail
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Core\Logging.cs
        startLine: 16
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string Detail { get; set; }
          VB: Public Property Detail As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Core.Logging.Detail*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Core.Logging.Mode
      commentId: P:AbatabData.Core.Logging.Mode
      language: CSharp
      name:
        CSharp: Mode
        VB: Mode
      nameWithType:
        CSharp: Logging.Mode
        VB: Logging.Mode
      qualifiedName:
        CSharp: AbatabData.Core.Logging.Mode
        VB: AbatabData.Core.Logging.Mode
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Core
      source:
        id: Mode
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Core\Logging.cs
        startLine: 22
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string Mode { get; set; }
          VB: Public Property Mode As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Core.Logging.Mode*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Core.Logging.EventErrorRoot
      commentId: P:AbatabData.Core.Logging.EventErrorRoot
      language: CSharp
      name:
        CSharp: EventErrorRoot
        VB: EventErrorRoot
      nameWithType:
        CSharp: Logging.EventErrorRoot
        VB: Logging.EventErrorRoot
      qualifiedName:
        CSharp: AbatabData.Core.Logging.EventErrorRoot
        VB: AbatabData.Core.Logging.EventErrorRoot
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Core
      source:
        id: EventErrorRoot
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Core\Logging.cs
        startLine: 28
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string EventErrorRoot { get; set; }
          VB: Public Property EventErrorRoot As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Core.Logging.EventErrorRoot*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Core.Logging.EventLostRoot
      commentId: P:AbatabData.Core.Logging.EventLostRoot
      language: CSharp
      name:
        CSharp: EventLostRoot
        VB: EventLostRoot
      nameWithType:
        CSharp: Logging.EventLostRoot
        VB: Logging.EventLostRoot
      qualifiedName:
        CSharp: AbatabData.Core.Logging.EventLostRoot
        VB: AbatabData.Core.Logging.EventLostRoot
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Core
      source:
        id: EventLostRoot
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Core\Logging.cs
        startLine: 34
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string EventLostRoot { get; set; }
          VB: Public Property EventLostRoot As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Core.Logging.EventLostRoot*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Core.Logging.EventTraceRoot
      commentId: P:AbatabData.Core.Logging.EventTraceRoot
      language: CSharp
      name:
        CSharp: EventTraceRoot
        VB: EventTraceRoot
      nameWithType:
        CSharp: Logging.EventTraceRoot
        VB: Logging.EventTraceRoot
      qualifiedName:
        CSharp: AbatabData.Core.Logging.EventTraceRoot
        VB: AbatabData.Core.Logging.EventTraceRoot
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Core
      source:
        id: EventTraceRoot
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Core\Logging.cs
        startLine: 40
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string EventTraceRoot { get; set; }
          VB: Public Property EventTraceRoot As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Core.Logging.EventTraceRoot*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Core.Logging.EventWarningRoot
      commentId: P:AbatabData.Core.Logging.EventWarningRoot
      language: CSharp
      name:
        CSharp: EventWarningRoot
        VB: EventWarningRoot
      nameWithType:
        CSharp: Logging.EventWarningRoot
        VB: Logging.EventWarningRoot
      qualifiedName:
        CSharp: AbatabData.Core.Logging.EventWarningRoot
        VB: AbatabData.Core.Logging.EventWarningRoot
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Core
      source:
        id: EventWarningRoot
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Core\Logging.cs
        startLine: 46
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string EventWarningRoot { get; set; }
          VB: Public Property EventWarningRoot As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Core.Logging.EventWarningRoot*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Core.Logging.Root
      commentId: P:AbatabData.Core.Logging.Root
      language: CSharp
      name:
        CSharp: Root
        VB: Root
      nameWithType:
        CSharp: Logging.Root
        VB: Logging.Root
      qualifiedName:
        CSharp: AbatabData.Core.Logging.Root
        VB: AbatabData.Core.Logging.Root
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Core
      source:
        id: Root
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Core\Logging.cs
        startLine: 52
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string Root { get; set; }
          VB: Public Property Root As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Core.Logging.Root*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Core.Logging.SessionRoot
      commentId: P:AbatabData.Core.Logging.SessionRoot
      language: CSharp
      name:
        CSharp: SessionRoot
        VB: SessionRoot
      nameWithType:
        CSharp: Logging.SessionRoot
        VB: Logging.SessionRoot
      qualifiedName:
        CSharp: AbatabData.Core.Logging.SessionRoot
        VB: AbatabData.Core.Logging.SessionRoot
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Core
      source:
        id: SessionRoot
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Core\Logging.cs
        startLine: 58
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string SessionRoot { get; set; }
          VB: Public Property SessionRoot As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Core.Logging.SessionRoot*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Core.Logging.WriteDelay
      commentId: P:AbatabData.Core.Logging.WriteDelay
      language: CSharp
      name:
        CSharp: WriteDelay
        VB: WriteDelay
      nameWithType:
        CSharp: Logging.WriteDelay
        VB: Logging.WriteDelay
      qualifiedName:
        CSharp: AbatabData.Core.Logging.WriteDelay
        VB: AbatabData.Core.Logging.WriteDelay
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Core
      source:
        id: WriteDelay
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Core\Logging.cs
        startLine: 64
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string WriteDelay { get; set; }
          VB: Public Property WriteDelay As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Core.Logging.WriteDelay*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
- id: AbatabData.Module
  commentId: N:AbatabData.Module
  language: CSharp
  name:
    CSharp: AbatabData.Module
    VB: AbatabData.Module
  nameWithType:
    CSharp: AbatabData.Module
    VB: AbatabData.Module
  qualifiedName:
    CSharp: AbatabData.Module
    VB: AbatabData.Module
  type: Namespace
  assemblies:
  - AbatabData
  modifiers: {}
  items:
  - id: AbatabData.Module.Common
    commentId: T:AbatabData.Module.Common
    language: CSharp
    name:
      CSharp: Common
      VB: Common
    nameWithType:
      CSharp: Common
      VB: Common
    qualifiedName:
      CSharp: AbatabData.Module.Common
      VB: AbatabData.Module.Common
    type: Class
    assemblies:
    - AbatabData
    namespace: AbatabData.Module
    source:
      id: Common
      path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\Common.cs
      startLine: 10
    summary: "\n\n"
    example: []
    syntax:
      content:
        CSharp: public class Common
        VB: Public Class Common
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: AbatabData.Module.Prototype
    commentId: T:AbatabData.Module.Prototype
    language: CSharp
    name:
      CSharp: Prototype
      VB: Prototype
    nameWithType:
      CSharp: Prototype
      VB: Prototype
    qualifiedName:
      CSharp: AbatabData.Module.Prototype
      VB: AbatabData.Module.Prototype
    type: Class
    assemblies:
    - AbatabData
    namespace: AbatabData.Module
    source:
      id: Prototype
      path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\Prototype.cs
      startLine: 10
    summary: "\n\n"
    example: []
    syntax:
      content:
        CSharp: public class Prototype
        VB: Public Class Prototype
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AbatabData.Module.Prototype.Mode
      commentId: P:AbatabData.Module.Prototype.Mode
      language: CSharp
      name:
        CSharp: Mode
        VB: Mode
      nameWithType:
        CSharp: Prototype.Mode
        VB: Prototype.Mode
      qualifiedName:
        CSharp: AbatabData.Module.Prototype.Mode
        VB: AbatabData.Module.Prototype.Mode
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Module
      source:
        id: Mode
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\Prototype.cs
        startLine: 16
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string Mode { get; set; }
          VB: Public Property Mode As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Module.Prototype.Mode*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: AbatabData.Module.Testing
    commentId: T:AbatabData.Module.Testing
    language: CSharp
    name:
      CSharp: Testing
      VB: Testing
    nameWithType:
      CSharp: Testing
      VB: Testing
    qualifiedName:
      CSharp: AbatabData.Module.Testing
      VB: AbatabData.Module.Testing
    type: Class
    assemblies:
    - AbatabData
    namespace: AbatabData.Module
    source:
      id: Testing
      path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\Testing.cs
      startLine: 10
    summary: "\nDefines the properties for the AbatabData.Module.Testing object, containing the information/data that Abatab needs to do its job.\n"
    example: []
    syntax:
      content:
        CSharp: public class Testing
        VB: Public Class Testing
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AbatabData.Module.Testing.Mode
      commentId: P:AbatabData.Module.Testing.Mode
      language: CSharp
      name:
        CSharp: Mode
        VB: Mode
      nameWithType:
        CSharp: Testing.Mode
        VB: Testing.Mode
      qualifiedName:
        CSharp: AbatabData.Module.Testing.Mode
        VB: AbatabData.Module.Testing.Mode
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Module
      source:
        id: Mode
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\Testing.cs
        startLine: 16
      summary: "\nThe default behavior of the Abatab Testing Module. <a href=\"https://spectrum-health-systems.github.io/Abatab/man/man-configuration-local-settings.html#modtestingmode\"> [more info]</a>\n"
      example: []
      syntax:
        content:
          CSharp: public string Mode { get; set; }
          VB: Public Property Mode As String
        parameters: []
        return:
          type: System.String
          description: Default value is <code>enabled</code>.
      overload: AbatabData.Module.Testing.Mode*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: AbatabData.Module.QuickMedOrder
    commentId: T:AbatabData.Module.QuickMedOrder
    language: CSharp
    name:
      CSharp: QuickMedOrder
      VB: QuickMedOrder
    nameWithType:
      CSharp: QuickMedOrder
      VB: QuickMedOrder
    qualifiedName:
      CSharp: AbatabData.Module.QuickMedOrder
      VB: AbatabData.Module.QuickMedOrder
    type: Class
    assemblies:
    - AbatabData
    namespace: AbatabData.Module
    source:
      id: QuickMedOrder
      path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\QuickMedOrder.cs
      startLine: 10
    summary: "\nDefines the properties for the AbatabData.QuickMedOrderData object, containing the information needed for ModQuickMedOrder functionality.\n"
    example: []
    syntax:
      content:
        CSharp: public class QuickMedOrder
        VB: Public Class QuickMedOrder
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AbatabData.Module.QuickMedOrder.Mode
      commentId: P:AbatabData.Module.QuickMedOrder.Mode
      language: CSharp
      name:
        CSharp: Mode
        VB: Mode
      nameWithType:
        CSharp: QuickMedOrder.Mode
        VB: QuickMedOrder.Mode
      qualifiedName:
        CSharp: AbatabData.Module.QuickMedOrder.Mode
        VB: AbatabData.Module.QuickMedOrder.Mode
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Module
      source:
        id: Mode
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\QuickMedOrder.cs
        startLine: 16
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string Mode { get; set; }
          VB: Public Property Mode As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Module.QuickMedOrder.Mode*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Module.QuickMedOrder.AuthorizedUsers
      commentId: P:AbatabData.Module.QuickMedOrder.AuthorizedUsers
      language: CSharp
      name:
        CSharp: AuthorizedUsers
        VB: AuthorizedUsers
      nameWithType:
        CSharp: QuickMedOrder.AuthorizedUsers
        VB: QuickMedOrder.AuthorizedUsers
      qualifiedName:
        CSharp: AbatabData.Module.QuickMedOrder.AuthorizedUsers
        VB: AbatabData.Module.QuickMedOrder.AuthorizedUsers
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Module
      source:
        id: AuthorizedUsers
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\QuickMedOrder.cs
        startLine: 22
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string AuthorizedUsers { get; set; }
          VB: Public Property AuthorizedUsers As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Module.QuickMedOrder.AuthorizedUsers*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Module.QuickMedOrder.ValidOrderTypes
      commentId: P:AbatabData.Module.QuickMedOrder.ValidOrderTypes
      language: CSharp
      name:
        CSharp: ValidOrderTypes
        VB: ValidOrderTypes
      nameWithType:
        CSharp: QuickMedOrder.ValidOrderTypes
        VB: QuickMedOrder.ValidOrderTypes
      qualifiedName:
        CSharp: AbatabData.Module.QuickMedOrder.ValidOrderTypes
        VB: AbatabData.Module.QuickMedOrder.ValidOrderTypes
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Module
      source:
        id: ValidOrderTypes
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\QuickMedOrder.cs
        startLine: 28
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string ValidOrderTypes { get; set; }
          VB: Public Property ValidOrderTypes As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Module.QuickMedOrder.ValidOrderTypes*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Module.QuickMedOrder.DosePercentBoundary
      commentId: P:AbatabData.Module.QuickMedOrder.DosePercentBoundary
      language: CSharp
      name:
        CSharp: DosePercentBoundary
        VB: DosePercentBoundary
      nameWithType:
        CSharp: QuickMedOrder.DosePercentBoundary
        VB: QuickMedOrder.DosePercentBoundary
      qualifiedName:
        CSharp: AbatabData.Module.QuickMedOrder.DosePercentBoundary
        VB: AbatabData.Module.QuickMedOrder.DosePercentBoundary
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Module
      source:
        id: DosePercentBoundary
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\QuickMedOrder.cs
        startLine: 34
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string DosePercentBoundary { get; set; }
          VB: Public Property DosePercentBoundary As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Module.QuickMedOrder.DosePercentBoundary*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Module.QuickMedOrder.DoseMilligramsBoundary
      commentId: P:AbatabData.Module.QuickMedOrder.DoseMilligramsBoundary
      language: CSharp
      name:
        CSharp: DoseMilligramsBoundary
        VB: DoseMilligramsBoundary
      nameWithType:
        CSharp: QuickMedOrder.DoseMilligramsBoundary
        VB: QuickMedOrder.DoseMilligramsBoundary
      qualifiedName:
        CSharp: AbatabData.Module.QuickMedOrder.DoseMilligramsBoundary
        VB: AbatabData.Module.QuickMedOrder.DoseMilligramsBoundary
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Module
      source:
        id: DoseMilligramsBoundary
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\QuickMedOrder.cs
        startLine: 40
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string DoseMilligramsBoundary { get; set; }
          VB: Public Property DoseMilligramsBoundary As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Module.QuickMedOrder.DoseMilligramsBoundary*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Module.QuickMedOrder.PrevDosePrefix
      commentId: P:AbatabData.Module.QuickMedOrder.PrevDosePrefix
      language: CSharp
      name:
        CSharp: PrevDosePrefix
        VB: PrevDosePrefix
      nameWithType:
        CSharp: QuickMedOrder.PrevDosePrefix
        VB: QuickMedOrder.PrevDosePrefix
      qualifiedName:
        CSharp: AbatabData.Module.QuickMedOrder.PrevDosePrefix
        VB: AbatabData.Module.QuickMedOrder.PrevDosePrefix
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Module
      source:
        id: PrevDosePrefix
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\QuickMedOrder.cs
        startLine: 46
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string PrevDosePrefix { get; set; }
          VB: Public Property PrevDosePrefix As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Module.QuickMedOrder.PrevDosePrefix*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Module.QuickMedOrder.PrevDoseSuffix
      commentId: P:AbatabData.Module.QuickMedOrder.PrevDoseSuffix
      language: CSharp
      name:
        CSharp: PrevDoseSuffix
        VB: PrevDoseSuffix
      nameWithType:
        CSharp: QuickMedOrder.PrevDoseSuffix
        VB: QuickMedOrder.PrevDoseSuffix
      qualifiedName:
        CSharp: AbatabData.Module.QuickMedOrder.PrevDoseSuffix
        VB: AbatabData.Module.QuickMedOrder.PrevDoseSuffix
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Module
      source:
        id: PrevDoseSuffix
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\QuickMedOrder.cs
        startLine: 52
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string PrevDoseSuffix { get; set; }
          VB: Public Property PrevDoseSuffix As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Module.QuickMedOrder.PrevDoseSuffix*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Module.QuickMedOrder.DosageOneFieldId
      commentId: P:AbatabData.Module.QuickMedOrder.DosageOneFieldId
      language: CSharp
      name:
        CSharp: DosageOneFieldId
        VB: DosageOneFieldId
      nameWithType:
        CSharp: QuickMedOrder.DosageOneFieldId
        VB: QuickMedOrder.DosageOneFieldId
      qualifiedName:
        CSharp: AbatabData.Module.QuickMedOrder.DosageOneFieldId
        VB: AbatabData.Module.QuickMedOrder.DosageOneFieldId
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Module
      source:
        id: DosageOneFieldId
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\QuickMedOrder.cs
        startLine: 58
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string DosageOneFieldId { get; set; }
          VB: Public Property DosageOneFieldId As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Module.QuickMedOrder.DosageOneFieldId*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Module.QuickMedOrder.FoundDosageOneFieldId
      commentId: P:AbatabData.Module.QuickMedOrder.FoundDosageOneFieldId
      language: CSharp
      name:
        CSharp: FoundDosageOneFieldId
        VB: FoundDosageOneFieldId
      nameWithType:
        CSharp: QuickMedOrder.FoundDosageOneFieldId
        VB: QuickMedOrder.FoundDosageOneFieldId
      qualifiedName:
        CSharp: AbatabData.Module.QuickMedOrder.FoundDosageOneFieldId
        VB: AbatabData.Module.QuickMedOrder.FoundDosageOneFieldId
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Module
      source:
        id: FoundDosageOneFieldId
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\QuickMedOrder.cs
        startLine: 64
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public bool FoundDosageOneFieldId { get; set; }
          VB: Public Property FoundDosageOneFieldId As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: ''
      overload: AbatabData.Module.QuickMedOrder.FoundDosageOneFieldId*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Module.QuickMedOrder.CurrentDose
      commentId: P:AbatabData.Module.QuickMedOrder.CurrentDose
      language: CSharp
      name:
        CSharp: CurrentDose
        VB: CurrentDose
      nameWithType:
        CSharp: QuickMedOrder.CurrentDose
        VB: QuickMedOrder.CurrentDose
      qualifiedName:
        CSharp: AbatabData.Module.QuickMedOrder.CurrentDose
        VB: AbatabData.Module.QuickMedOrder.CurrentDose
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Module
      source:
        id: CurrentDose
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\QuickMedOrder.cs
        startLine: 70
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string CurrentDose { get; set; }
          VB: Public Property CurrentDose As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Module.QuickMedOrder.CurrentDose*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Module.QuickMedOrder.OrderTypeFieldId
      commentId: P:AbatabData.Module.QuickMedOrder.OrderTypeFieldId
      language: CSharp
      name:
        CSharp: OrderTypeFieldId
        VB: OrderTypeFieldId
      nameWithType:
        CSharp: QuickMedOrder.OrderTypeFieldId
        VB: QuickMedOrder.OrderTypeFieldId
      qualifiedName:
        CSharp: AbatabData.Module.QuickMedOrder.OrderTypeFieldId
        VB: AbatabData.Module.QuickMedOrder.OrderTypeFieldId
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Module
      source:
        id: OrderTypeFieldId
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\QuickMedOrder.cs
        startLine: 76
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string OrderTypeFieldId { get; set; }
          VB: Public Property OrderTypeFieldId As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Module.QuickMedOrder.OrderTypeFieldId*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Module.QuickMedOrder.FoundOrderTypeFieldId
      commentId: P:AbatabData.Module.QuickMedOrder.FoundOrderTypeFieldId
      language: CSharp
      name:
        CSharp: FoundOrderTypeFieldId
        VB: FoundOrderTypeFieldId
      nameWithType:
        CSharp: QuickMedOrder.FoundOrderTypeFieldId
        VB: QuickMedOrder.FoundOrderTypeFieldId
      qualifiedName:
        CSharp: AbatabData.Module.QuickMedOrder.FoundOrderTypeFieldId
        VB: AbatabData.Module.QuickMedOrder.FoundOrderTypeFieldId
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Module
      source:
        id: FoundOrderTypeFieldId
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\QuickMedOrder.cs
        startLine: 82
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public bool FoundOrderTypeFieldId { get; set; }
          VB: Public Property FoundOrderTypeFieldId As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: ''
      overload: AbatabData.Module.QuickMedOrder.FoundOrderTypeFieldId*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Module.QuickMedOrder.OrderType
      commentId: P:AbatabData.Module.QuickMedOrder.OrderType
      language: CSharp
      name:
        CSharp: OrderType
        VB: OrderType
      nameWithType:
        CSharp: QuickMedOrder.OrderType
        VB: QuickMedOrder.OrderType
      qualifiedName:
        CSharp: AbatabData.Module.QuickMedOrder.OrderType
        VB: AbatabData.Module.QuickMedOrder.OrderType
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Module
      source:
        id: OrderType
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\QuickMedOrder.cs
        startLine: 88
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string OrderType { get; set; }
          VB: Public Property OrderType As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Module.QuickMedOrder.OrderType*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Module.QuickMedOrder.LastOrderScheduleFieldId
      commentId: P:AbatabData.Module.QuickMedOrder.LastOrderScheduleFieldId
      language: CSharp
      name:
        CSharp: LastOrderScheduleFieldId
        VB: LastOrderScheduleFieldId
      nameWithType:
        CSharp: QuickMedOrder.LastOrderScheduleFieldId
        VB: QuickMedOrder.LastOrderScheduleFieldId
      qualifiedName:
        CSharp: AbatabData.Module.QuickMedOrder.LastOrderScheduleFieldId
        VB: AbatabData.Module.QuickMedOrder.LastOrderScheduleFieldId
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Module
      source:
        id: LastOrderScheduleFieldId
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\QuickMedOrder.cs
        startLine: 94
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string LastOrderScheduleFieldId { get; set; }
          VB: Public Property LastOrderScheduleFieldId As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Module.QuickMedOrder.LastOrderScheduleFieldId*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Module.QuickMedOrder.FoundLastOrderScheduleFieldId
      commentId: P:AbatabData.Module.QuickMedOrder.FoundLastOrderScheduleFieldId
      language: CSharp
      name:
        CSharp: FoundLastOrderScheduleFieldId
        VB: FoundLastOrderScheduleFieldId
      nameWithType:
        CSharp: QuickMedOrder.FoundLastOrderScheduleFieldId
        VB: QuickMedOrder.FoundLastOrderScheduleFieldId
      qualifiedName:
        CSharp: AbatabData.Module.QuickMedOrder.FoundLastOrderScheduleFieldId
        VB: AbatabData.Module.QuickMedOrder.FoundLastOrderScheduleFieldId
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Module
      source:
        id: FoundLastOrderScheduleFieldId
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\QuickMedOrder.cs
        startLine: 100
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public bool FoundLastOrderScheduleFieldId { get; set; }
          VB: Public Property FoundLastOrderScheduleFieldId As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: ''
      overload: AbatabData.Module.QuickMedOrder.FoundLastOrderScheduleFieldId*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Module.QuickMedOrder.LastOrderScheduleText
      commentId: P:AbatabData.Module.QuickMedOrder.LastOrderScheduleText
      language: CSharp
      name:
        CSharp: LastOrderScheduleText
        VB: LastOrderScheduleText
      nameWithType:
        CSharp: QuickMedOrder.LastOrderScheduleText
        VB: QuickMedOrder.LastOrderScheduleText
      qualifiedName:
        CSharp: AbatabData.Module.QuickMedOrder.LastOrderScheduleText
        VB: AbatabData.Module.QuickMedOrder.LastOrderScheduleText
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Module
      source:
        id: LastOrderScheduleText
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\QuickMedOrder.cs
        startLine: 106
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string LastOrderScheduleText { get; set; }
          VB: Public Property LastOrderScheduleText As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Module.QuickMedOrder.LastOrderScheduleText*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Module.QuickMedOrder.LastScheduledDosage
      commentId: P:AbatabData.Module.QuickMedOrder.LastScheduledDosage
      language: CSharp
      name:
        CSharp: LastScheduledDosage
        VB: LastScheduledDosage
      nameWithType:
        CSharp: QuickMedOrder.LastScheduledDosage
        VB: QuickMedOrder.LastScheduledDosage
      qualifiedName:
        CSharp: AbatabData.Module.QuickMedOrder.LastScheduledDosage
        VB: AbatabData.Module.QuickMedOrder.LastScheduledDosage
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Module
      source:
        id: LastScheduledDosage
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\QuickMedOrder.cs
        startLine: 112
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public string LastScheduledDosage { get; set; }
          VB: Public Property LastScheduledDosage As String
        parameters: []
        return:
          type: System.String
          description: ''
      overload: AbatabData.Module.QuickMedOrder.LastScheduledDosage*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AbatabData.Module.QuickMedOrder.FoundAllRequiredFieldIds
      commentId: P:AbatabData.Module.QuickMedOrder.FoundAllRequiredFieldIds
      language: CSharp
      name:
        CSharp: FoundAllRequiredFieldIds
        VB: FoundAllRequiredFieldIds
      nameWithType:
        CSharp: QuickMedOrder.FoundAllRequiredFieldIds
        VB: QuickMedOrder.FoundAllRequiredFieldIds
      qualifiedName:
        CSharp: AbatabData.Module.QuickMedOrder.FoundAllRequiredFieldIds
        VB: AbatabData.Module.QuickMedOrder.FoundAllRequiredFieldIds
      type: Property
      assemblies:
      - AbatabData
      namespace: AbatabData.Module
      source:
        id: FoundAllRequiredFieldIds
        path: C:\IT\GitHub\SHS\Abatab\src\Core\AbatabData\Module\QuickMedOrder.cs
        startLine: 118
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public bool FoundAllRequiredFieldIds { get; set; }
          VB: Public Property FoundAllRequiredFieldIds As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: ''
      overload: AbatabData.Module.QuickMedOrder.FoundAllRequiredFieldIds*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  AbatabData.Session.AbatabMode*:
    name:
      CSharp:
      - id: AbatabData.Session.AbatabMode*
        name: AbatabMode
        nameWithType: Session.AbatabMode
        qualifiedName: AbatabData.Session.AbatabMode
      VB:
      - id: AbatabData.Session.AbatabMode*
        name: AbatabMode
        nameWithType: Session.AbatabMode
        qualifiedName: AbatabData.Session.AbatabMode
    isDefinition: true
    commentId: Overload:AbatabData.Session.AbatabMode
  AbatabData.Session.AbatabRoot*:
    name:
      CSharp:
      - id: AbatabData.Session.AbatabRoot*
        name: AbatabRoot
        nameWithType: Session.AbatabRoot
        qualifiedName: AbatabData.Session.AbatabRoot
      VB:
      - id: AbatabData.Session.AbatabRoot*
        name: AbatabRoot
        nameWithType: Session.AbatabRoot
        qualifiedName: AbatabData.Session.AbatabRoot
    isDefinition: true
    commentId: Overload:AbatabData.Session.AbatabRoot
  AbatabData.Session.AvatarEnvironment*:
    name:
      CSharp:
      - id: AbatabData.Session.AvatarEnvironment*
        name: AvatarEnvironment
        nameWithType: Session.AvatarEnvironment
        qualifiedName: AbatabData.Session.AvatarEnvironment
      VB:
      - id: AbatabData.Session.AvatarEnvironment*
        name: AvatarEnvironment
        nameWithType: Session.AvatarEnvironment
        qualifiedName: AbatabData.Session.AvatarEnvironment
    isDefinition: true
    commentId: Overload:AbatabData.Session.AvatarEnvironment
  AbatabData.Session.AbatabFallbackUserName*:
    name:
      CSharp:
      - id: AbatabData.Session.AbatabFallbackUserName*
        name: AbatabFallbackUserName
        nameWithType: Session.AbatabFallbackUserName
        qualifiedName: AbatabData.Session.AbatabFallbackUserName
      VB:
      - id: AbatabData.Session.AbatabFallbackUserName*
        name: AbatabFallbackUserName
        nameWithType: Session.AbatabFallbackUserName
        qualifiedName: AbatabData.Session.AbatabFallbackUserName
    isDefinition: true
    commentId: Overload:AbatabData.Session.AbatabFallbackUserName
  AbatabData.Core:
    name:
      CSharp:
      - name: AbatabData.Core
        nameWithType: AbatabData.Core
        qualifiedName: AbatabData.Core
      VB:
      - name: AbatabData.Core
        nameWithType: AbatabData.Core
        qualifiedName: AbatabData.Core
    isDefinition: true
    commentId: N:AbatabData.Core
  AbatabData.Core.Debuggler:
    name:
      CSharp:
      - id: AbatabData.Core.Debuggler
        name: Debuggler
        nameWithType: Debuggler
        qualifiedName: AbatabData.Core.Debuggler
      VB:
      - id: AbatabData.Core.Debuggler
        name: Debuggler
        nameWithType: Debuggler
        qualifiedName: AbatabData.Core.Debuggler
    isDefinition: true
    parent: AbatabData.Core
    commentId: T:AbatabData.Core.Debuggler
  AbatabData.Session.DebugglerConfig*:
    name:
      CSharp:
      - id: AbatabData.Session.DebugglerConfig*
        name: DebugglerConfig
        nameWithType: Session.DebugglerConfig
        qualifiedName: AbatabData.Session.DebugglerConfig
      VB:
      - id: AbatabData.Session.DebugglerConfig*
        name: DebugglerConfig
        nameWithType: Session.DebugglerConfig
        qualifiedName: AbatabData.Session.DebugglerConfig
    isDefinition: true
    commentId: Overload:AbatabData.Session.DebugglerConfig
  AbatabData.Core.Logging:
    name:
      CSharp:
      - id: AbatabData.Core.Logging
        name: Logging
        nameWithType: Logging
        qualifiedName: AbatabData.Core.Logging
      VB:
      - id: AbatabData.Core.Logging
        name: Logging
        nameWithType: Logging
        qualifiedName: AbatabData.Core.Logging
    isDefinition: true
    parent: AbatabData.Core
    commentId: T:AbatabData.Core.Logging
  AbatabData.Session.LoggingConfig*:
    name:
      CSharp:
      - id: AbatabData.Session.LoggingConfig*
        name: LoggingConfig
        nameWithType: Session.LoggingConfig
        qualifiedName: AbatabData.Session.LoggingConfig
      VB:
      - id: AbatabData.Session.LoggingConfig*
        name: LoggingConfig
        nameWithType: Session.LoggingConfig
        qualifiedName: AbatabData.Session.LoggingConfig
    isDefinition: true
    commentId: Overload:AbatabData.Session.LoggingConfig
  AbatabData.Module:
    name:
      CSharp:
      - name: AbatabData.Module
        nameWithType: AbatabData.Module
        qualifiedName: AbatabData.Module
      VB:
      - name: AbatabData.Module
        nameWithType: AbatabData.Module
        qualifiedName: AbatabData.Module
    isDefinition: true
    commentId: N:AbatabData.Module
  AbatabData.Module.Common:
    name:
      CSharp:
      - id: AbatabData.Module.Common
        name: Common
        nameWithType: Common
        qualifiedName: AbatabData.Module.Common
      VB:
      - id: AbatabData.Module.Common
        name: Common
        nameWithType: Common
        qualifiedName: AbatabData.Module.Common
    isDefinition: true
    parent: AbatabData.Module
    commentId: T:AbatabData.Module.Common
  AbatabData.Session.ModCommonConfig*:
    name:
      CSharp:
      - id: AbatabData.Session.ModCommonConfig*
        name: ModCommonConfig
        nameWithType: Session.ModCommonConfig
        qualifiedName: AbatabData.Session.ModCommonConfig
      VB:
      - id: AbatabData.Session.ModCommonConfig*
        name: ModCommonConfig
        nameWithType: Session.ModCommonConfig
        qualifiedName: AbatabData.Session.ModCommonConfig
    isDefinition: true
    commentId: Overload:AbatabData.Session.ModCommonConfig
  AbatabData.Module.Prototype:
    name:
      CSharp:
      - id: AbatabData.Module.Prototype
        name: Prototype
        nameWithType: Prototype
        qualifiedName: AbatabData.Module.Prototype
      VB:
      - id: AbatabData.Module.Prototype
        name: Prototype
        nameWithType: Prototype
        qualifiedName: AbatabData.Module.Prototype
    isDefinition: true
    parent: AbatabData.Module
    commentId: T:AbatabData.Module.Prototype
  AbatabData.Session.ModPrototypeConfig*:
    name:
      CSharp:
      - id: AbatabData.Session.ModPrototypeConfig*
        name: ModPrototypeConfig
        nameWithType: Session.ModPrototypeConfig
        qualifiedName: AbatabData.Session.ModPrototypeConfig
      VB:
      - id: AbatabData.Session.ModPrototypeConfig*
        name: ModPrototypeConfig
        nameWithType: Session.ModPrototypeConfig
        qualifiedName: AbatabData.Session.ModPrototypeConfig
    isDefinition: true
    commentId: Overload:AbatabData.Session.ModPrototypeConfig
  AbatabData.Module.QuickMedOrder:
    name:
      CSharp:
      - id: AbatabData.Module.QuickMedOrder
        name: QuickMedOrder
        nameWithType: QuickMedOrder
        qualifiedName: AbatabData.Module.QuickMedOrder
      VB:
      - id: AbatabData.Module.QuickMedOrder
        name: QuickMedOrder
        nameWithType: QuickMedOrder
        qualifiedName: AbatabData.Module.QuickMedOrder
    isDefinition: true
    parent: AbatabData.Module
    commentId: T:AbatabData.Module.QuickMedOrder
  AbatabData.Session.ModQuickMedOrderConfig*:
    name:
      CSharp:
      - id: AbatabData.Session.ModQuickMedOrderConfig*
        name: ModQuickMedOrderConfig
        nameWithType: Session.ModQuickMedOrderConfig
        qualifiedName: AbatabData.Session.ModQuickMedOrderConfig
      VB:
      - id: AbatabData.Session.ModQuickMedOrderConfig*
        name: ModQuickMedOrderConfig
        nameWithType: Session.ModQuickMedOrderConfig
        qualifiedName: AbatabData.Session.ModQuickMedOrderConfig
    isDefinition: true
    commentId: Overload:AbatabData.Session.ModQuickMedOrderConfig
  AbatabData.Module.Testing:
    name:
      CSharp:
      - id: AbatabData.Module.Testing
        name: Testing
        nameWithType: Testing
        qualifiedName: AbatabData.Module.Testing
      VB:
      - id: AbatabData.Module.Testing
        name: Testing
        nameWithType: Testing
        qualifiedName: AbatabData.Module.Testing
    isDefinition: true
    parent: AbatabData.Module
    commentId: T:AbatabData.Module.Testing
  AbatabData.Session.ModTestingConfig*:
    name:
      CSharp:
      - id: AbatabData.Session.ModTestingConfig*
        name: ModTestingConfig
        nameWithType: Session.ModTestingConfig
        qualifiedName: AbatabData.Session.ModTestingConfig
      VB:
      - id: AbatabData.Session.ModTestingConfig*
        name: ModTestingConfig
        nameWithType: Session.ModTestingConfig
        qualifiedName: AbatabData.Session.ModTestingConfig
    isDefinition: true
    commentId: Overload:AbatabData.Session.ModTestingConfig
  AbatabData.Session.SessionDateStamp*:
    name:
      CSharp:
      - id: AbatabData.Session.SessionDateStamp*
        name: SessionDateStamp
        nameWithType: Session.SessionDateStamp
        qualifiedName: AbatabData.Session.SessionDateStamp
      VB:
      - id: AbatabData.Session.SessionDateStamp*
        name: SessionDateStamp
        nameWithType: Session.SessionDateStamp
        qualifiedName: AbatabData.Session.SessionDateStamp
    isDefinition: true
    commentId: Overload:AbatabData.Session.SessionDateStamp
  AbatabData.Session.SessionTimeStamp*:
    name:
      CSharp:
      - id: AbatabData.Session.SessionTimeStamp*
        name: SessionTimeStamp
        nameWithType: Session.SessionTimeStamp
        qualifiedName: AbatabData.Session.SessionTimeStamp
      VB:
      - id: AbatabData.Session.SessionTimeStamp*
        name: SessionTimeStamp
        nameWithType: Session.SessionTimeStamp
        qualifiedName: AbatabData.Session.SessionTimeStamp
    isDefinition: true
    commentId: Overload:AbatabData.Session.SessionTimeStamp
  AbatabData.Session.AbatabUserName*:
    name:
      CSharp:
      - id: AbatabData.Session.AbatabUserName*
        name: AbatabUserName
        nameWithType: Session.AbatabUserName
        qualifiedName: AbatabData.Session.AbatabUserName
      VB:
      - id: AbatabData.Session.AbatabUserName*
        name: AbatabUserName
        nameWithType: Session.AbatabUserName
        qualifiedName: AbatabData.Session.AbatabUserName
    isDefinition: true
    commentId: Overload:AbatabData.Session.AbatabUserName
  AbatabData.Session.AbatabRequest*:
    name:
      CSharp:
      - id: AbatabData.Session.AbatabRequest*
        name: AbatabRequest
        nameWithType: Session.AbatabRequest
        qualifiedName: AbatabData.Session.AbatabRequest
      VB:
      - id: AbatabData.Session.AbatabRequest*
        name: AbatabRequest
        nameWithType: Session.AbatabRequest
        qualifiedName: AbatabData.Session.AbatabRequest
    isDefinition: true
    commentId: Overload:AbatabData.Session.AbatabRequest
  AbatabData.Session.AbatabModule*:
    name:
      CSharp:
      - id: AbatabData.Session.AbatabModule*
        name: AbatabModule
        nameWithType: Session.AbatabModule
        qualifiedName: AbatabData.Session.AbatabModule
      VB:
      - id: AbatabData.Session.AbatabModule*
        name: AbatabModule
        nameWithType: Session.AbatabModule
        qualifiedName: AbatabData.Session.AbatabModule
    isDefinition: true
    commentId: Overload:AbatabData.Session.AbatabModule
  AbatabData.Session.AbatabCommand*:
    name:
      CSharp:
      - id: AbatabData.Session.AbatabCommand*
        name: AbatabCommand
        nameWithType: Session.AbatabCommand
        qualifiedName: AbatabData.Session.AbatabCommand
      VB:
      - id: AbatabData.Session.AbatabCommand*
        name: AbatabCommand
        nameWithType: Session.AbatabCommand
        qualifiedName: AbatabData.Session.AbatabCommand
    isDefinition: true
    commentId: Overload:AbatabData.Session.AbatabCommand
  AbatabData.Session.AbatabAction*:
    name:
      CSharp:
      - id: AbatabData.Session.AbatabAction*
        name: AbatabAction
        nameWithType: Session.AbatabAction
        qualifiedName: AbatabData.Session.AbatabAction
      VB:
      - id: AbatabData.Session.AbatabAction*
        name: AbatabAction
        nameWithType: Session.AbatabAction
        qualifiedName: AbatabData.Session.AbatabAction
    isDefinition: true
    commentId: Overload:AbatabData.Session.AbatabAction
  AbatabData.Session.AbatabOption*:
    name:
      CSharp:
      - id: AbatabData.Session.AbatabOption*
        name: AbatabOption
        nameWithType: Session.AbatabOption
        qualifiedName: AbatabData.Session.AbatabOption
      VB:
      - id: AbatabData.Session.AbatabOption*
        name: AbatabOption
        nameWithType: Session.AbatabOption
        qualifiedName: AbatabData.Session.AbatabOption
    isDefinition: true
    commentId: Overload:AbatabData.Session.AbatabOption
  NTST.ScriptLinkService.Objects:
    name:
      CSharp:
      - name: NTST.ScriptLinkService.Objects
        nameWithType: NTST.ScriptLinkService.Objects
        qualifiedName: NTST.ScriptLinkService.Objects
        isExternal: true
      VB:
      - name: NTST.ScriptLinkService.Objects
        nameWithType: NTST.ScriptLinkService.Objects
        qualifiedName: NTST.ScriptLinkService.Objects
    isDefinition: true
    commentId: N:NTST.ScriptLinkService.Objects
  NTST.ScriptLinkService.Objects.OptionObject2015:
    name:
      CSharp:
      - id: NTST.ScriptLinkService.Objects.OptionObject2015
        name: OptionObject2015
        nameWithType: OptionObject2015
        qualifiedName: NTST.ScriptLinkService.Objects.OptionObject2015
        isExternal: true
      VB:
      - id: NTST.ScriptLinkService.Objects.OptionObject2015
        name: OptionObject2015
        nameWithType: OptionObject2015
        qualifiedName: NTST.ScriptLinkService.Objects.OptionObject2015
        isExternal: true
    isDefinition: true
    parent: NTST.ScriptLinkService.Objects
    commentId: T:NTST.ScriptLinkService.Objects.OptionObject2015
  AbatabData.Session.SentOptObj*:
    name:
      CSharp:
      - id: AbatabData.Session.SentOptObj*
        name: SentOptObj
        nameWithType: Session.SentOptObj
        qualifiedName: AbatabData.Session.SentOptObj
      VB:
      - id: AbatabData.Session.SentOptObj*
        name: SentOptObj
        nameWithType: Session.SentOptObj
        qualifiedName: AbatabData.Session.SentOptObj
    isDefinition: true
    commentId: Overload:AbatabData.Session.SentOptObj
  AbatabData.Session.WorkOptObj*:
    name:
      CSharp:
      - id: AbatabData.Session.WorkOptObj*
        name: WorkOptObj
        nameWithType: Session.WorkOptObj
        qualifiedName: AbatabData.Session.WorkOptObj
      VB:
      - id: AbatabData.Session.WorkOptObj*
        name: WorkOptObj
        nameWithType: Session.WorkOptObj
        qualifiedName: AbatabData.Session.WorkOptObj
    isDefinition: true
    commentId: Overload:AbatabData.Session.WorkOptObj
  AbatabData.Session.FinalOptObj*:
    name:
      CSharp:
      - id: AbatabData.Session.FinalOptObj*
        name: FinalOptObj
        nameWithType: Session.FinalOptObj
        qualifiedName: AbatabData.Session.FinalOptObj
      VB:
      - id: AbatabData.Session.FinalOptObj*
        name: FinalOptObj
        nameWithType: Session.FinalOptObj
        qualifiedName: AbatabData.Session.FinalOptObj
    isDefinition: true
    commentId: Overload:AbatabData.Session.FinalOptObj
  AbatabData.Session:
    name:
      CSharp:
      - id: AbatabData.Session
        name: Session
        nameWithType: Session
        qualifiedName: AbatabData.Session
      VB:
      - id: AbatabData.Session
        name: Session
        nameWithType: Session
        qualifiedName: AbatabData.Session
    isDefinition: true
    commentId: T:AbatabData.Session
  AbatabData:
    name:
      CSharp:
      - name: AbatabData
        nameWithType: AbatabData
        qualifiedName: AbatabData
      VB:
      - name: AbatabData
        nameWithType: AbatabData
        qualifiedName: AbatabData
    isDefinition: true
    commentId: N:AbatabData
  AbatabData.Core.Debuggler.Mode*:
    name:
      CSharp:
      - id: AbatabData.Core.Debuggler.Mode*
        name: Mode
        nameWithType: Debuggler.Mode
        qualifiedName: AbatabData.Core.Debuggler.Mode
      VB:
      - id: AbatabData.Core.Debuggler.Mode*
        name: Mode
        nameWithType: Debuggler.Mode
        qualifiedName: AbatabData.Core.Debuggler.Mode
    isDefinition: true
    commentId: Overload:AbatabData.Core.Debuggler.Mode
  AbatabData.Core.Debuggler.DebugEventRoot*:
    name:
      CSharp:
      - id: AbatabData.Core.Debuggler.DebugEventRoot*
        name: DebugEventRoot
        nameWithType: Debuggler.DebugEventRoot
        qualifiedName: AbatabData.Core.Debuggler.DebugEventRoot
      VB:
      - id: AbatabData.Core.Debuggler.DebugEventRoot*
        name: DebugEventRoot
        nameWithType: Debuggler.DebugEventRoot
        qualifiedName: AbatabData.Core.Debuggler.DebugEventRoot
    isDefinition: true
    commentId: Overload:AbatabData.Core.Debuggler.DebugEventRoot
  AbatabData.Core.Logging.Detail*:
    name:
      CSharp:
      - id: AbatabData.Core.Logging.Detail*
        name: Detail
        nameWithType: Logging.Detail
        qualifiedName: AbatabData.Core.Logging.Detail
      VB:
      - id: AbatabData.Core.Logging.Detail*
        name: Detail
        nameWithType: Logging.Detail
        qualifiedName: AbatabData.Core.Logging.Detail
    isDefinition: true
    commentId: Overload:AbatabData.Core.Logging.Detail
  AbatabData.Core.Logging.Mode*:
    name:
      CSharp:
      - id: AbatabData.Core.Logging.Mode*
        name: Mode
        nameWithType: Logging.Mode
        qualifiedName: AbatabData.Core.Logging.Mode
      VB:
      - id: AbatabData.Core.Logging.Mode*
        name: Mode
        nameWithType: Logging.Mode
        qualifiedName: AbatabData.Core.Logging.Mode
    isDefinition: true
    commentId: Overload:AbatabData.Core.Logging.Mode
  AbatabData.Core.Logging.EventErrorRoot*:
    name:
      CSharp:
      - id: AbatabData.Core.Logging.EventErrorRoot*
        name: EventErrorRoot
        nameWithType: Logging.EventErrorRoot
        qualifiedName: AbatabData.Core.Logging.EventErrorRoot
      VB:
      - id: AbatabData.Core.Logging.EventErrorRoot*
        name: EventErrorRoot
        nameWithType: Logging.EventErrorRoot
        qualifiedName: AbatabData.Core.Logging.EventErrorRoot
    isDefinition: true
    commentId: Overload:AbatabData.Core.Logging.EventErrorRoot
  AbatabData.Core.Logging.EventLostRoot*:
    name:
      CSharp:
      - id: AbatabData.Core.Logging.EventLostRoot*
        name: EventLostRoot
        nameWithType: Logging.EventLostRoot
        qualifiedName: AbatabData.Core.Logging.EventLostRoot
      VB:
      - id: AbatabData.Core.Logging.EventLostRoot*
        name: EventLostRoot
        nameWithType: Logging.EventLostRoot
        qualifiedName: AbatabData.Core.Logging.EventLostRoot
    isDefinition: true
    commentId: Overload:AbatabData.Core.Logging.EventLostRoot
  AbatabData.Core.Logging.EventTraceRoot*:
    name:
      CSharp:
      - id: AbatabData.Core.Logging.EventTraceRoot*
        name: EventTraceRoot
        nameWithType: Logging.EventTraceRoot
        qualifiedName: AbatabData.Core.Logging.EventTraceRoot
      VB:
      - id: AbatabData.Core.Logging.EventTraceRoot*
        name: EventTraceRoot
        nameWithType: Logging.EventTraceRoot
        qualifiedName: AbatabData.Core.Logging.EventTraceRoot
    isDefinition: true
    commentId: Overload:AbatabData.Core.Logging.EventTraceRoot
  AbatabData.Core.Logging.EventWarningRoot*:
    name:
      CSharp:
      - id: AbatabData.Core.Logging.EventWarningRoot*
        name: EventWarningRoot
        nameWithType: Logging.EventWarningRoot
        qualifiedName: AbatabData.Core.Logging.EventWarningRoot
      VB:
      - id: AbatabData.Core.Logging.EventWarningRoot*
        name: EventWarningRoot
        nameWithType: Logging.EventWarningRoot
        qualifiedName: AbatabData.Core.Logging.EventWarningRoot
    isDefinition: true
    commentId: Overload:AbatabData.Core.Logging.EventWarningRoot
  AbatabData.Core.Logging.Root*:
    name:
      CSharp:
      - id: AbatabData.Core.Logging.Root*
        name: Root
        nameWithType: Logging.Root
        qualifiedName: AbatabData.Core.Logging.Root
      VB:
      - id: AbatabData.Core.Logging.Root*
        name: Root
        nameWithType: Logging.Root
        qualifiedName: AbatabData.Core.Logging.Root
    isDefinition: true
    commentId: Overload:AbatabData.Core.Logging.Root
  AbatabData.Core.Logging.SessionRoot*:
    name:
      CSharp:
      - id: AbatabData.Core.Logging.SessionRoot*
        name: SessionRoot
        nameWithType: Logging.SessionRoot
        qualifiedName: AbatabData.Core.Logging.SessionRoot
      VB:
      - id: AbatabData.Core.Logging.SessionRoot*
        name: SessionRoot
        nameWithType: Logging.SessionRoot
        qualifiedName: AbatabData.Core.Logging.SessionRoot
    isDefinition: true
    commentId: Overload:AbatabData.Core.Logging.SessionRoot
  AbatabData.Core.Logging.WriteDelay*:
    name:
      CSharp:
      - id: AbatabData.Core.Logging.WriteDelay*
        name: WriteDelay
        nameWithType: Logging.WriteDelay
        qualifiedName: AbatabData.Core.Logging.WriteDelay
      VB:
      - id: AbatabData.Core.Logging.WriteDelay*
        name: WriteDelay
        nameWithType: Logging.WriteDelay
        qualifiedName: AbatabData.Core.Logging.WriteDelay
    isDefinition: true
    commentId: Overload:AbatabData.Core.Logging.WriteDelay
  AbatabData.Module.Prototype.Mode*:
    name:
      CSharp:
      - id: AbatabData.Module.Prototype.Mode*
        name: Mode
        nameWithType: Prototype.Mode
        qualifiedName: AbatabData.Module.Prototype.Mode
      VB:
      - id: AbatabData.Module.Prototype.Mode*
        name: Mode
        nameWithType: Prototype.Mode
        qualifiedName: AbatabData.Module.Prototype.Mode
    isDefinition: true
    commentId: Overload:AbatabData.Module.Prototype.Mode
  AbatabData.Module.Testing.Mode*:
    name:
      CSharp:
      - id: AbatabData.Module.Testing.Mode*
        name: Mode
        nameWithType: Testing.Mode
        qualifiedName: AbatabData.Module.Testing.Mode
      VB:
      - id: AbatabData.Module.Testing.Mode*
        name: Mode
        nameWithType: Testing.Mode
        qualifiedName: AbatabData.Module.Testing.Mode
    isDefinition: true
    commentId: Overload:AbatabData.Module.Testing.Mode
  AbatabData.Module.QuickMedOrder.Mode*:
    name:
      CSharp:
      - id: AbatabData.Module.QuickMedOrder.Mode*
        name: Mode
        nameWithType: QuickMedOrder.Mode
        qualifiedName: AbatabData.Module.QuickMedOrder.Mode
      VB:
      - id: AbatabData.Module.QuickMedOrder.Mode*
        name: Mode
        nameWithType: QuickMedOrder.Mode
        qualifiedName: AbatabData.Module.QuickMedOrder.Mode
    isDefinition: true
    commentId: Overload:AbatabData.Module.QuickMedOrder.Mode
  AbatabData.Module.QuickMedOrder.AuthorizedUsers*:
    name:
      CSharp:
      - id: AbatabData.Module.QuickMedOrder.AuthorizedUsers*
        name: AuthorizedUsers
        nameWithType: QuickMedOrder.AuthorizedUsers
        qualifiedName: AbatabData.Module.QuickMedOrder.AuthorizedUsers
      VB:
      - id: AbatabData.Module.QuickMedOrder.AuthorizedUsers*
        name: AuthorizedUsers
        nameWithType: QuickMedOrder.AuthorizedUsers
        qualifiedName: AbatabData.Module.QuickMedOrder.AuthorizedUsers
    isDefinition: true
    commentId: Overload:AbatabData.Module.QuickMedOrder.AuthorizedUsers
  AbatabData.Module.QuickMedOrder.ValidOrderTypes*:
    name:
      CSharp:
      - id: AbatabData.Module.QuickMedOrder.ValidOrderTypes*
        name: ValidOrderTypes
        nameWithType: QuickMedOrder.ValidOrderTypes
        qualifiedName: AbatabData.Module.QuickMedOrder.ValidOrderTypes
      VB:
      - id: AbatabData.Module.QuickMedOrder.ValidOrderTypes*
        name: ValidOrderTypes
        nameWithType: QuickMedOrder.ValidOrderTypes
        qualifiedName: AbatabData.Module.QuickMedOrder.ValidOrderTypes
    isDefinition: true
    commentId: Overload:AbatabData.Module.QuickMedOrder.ValidOrderTypes
  AbatabData.Module.QuickMedOrder.DosePercentBoundary*:
    name:
      CSharp:
      - id: AbatabData.Module.QuickMedOrder.DosePercentBoundary*
        name: DosePercentBoundary
        nameWithType: QuickMedOrder.DosePercentBoundary
        qualifiedName: AbatabData.Module.QuickMedOrder.DosePercentBoundary
      VB:
      - id: AbatabData.Module.QuickMedOrder.DosePercentBoundary*
        name: DosePercentBoundary
        nameWithType: QuickMedOrder.DosePercentBoundary
        qualifiedName: AbatabData.Module.QuickMedOrder.DosePercentBoundary
    isDefinition: true
    commentId: Overload:AbatabData.Module.QuickMedOrder.DosePercentBoundary
  AbatabData.Module.QuickMedOrder.DoseMilligramsBoundary*:
    name:
      CSharp:
      - id: AbatabData.Module.QuickMedOrder.DoseMilligramsBoundary*
        name: DoseMilligramsBoundary
        nameWithType: QuickMedOrder.DoseMilligramsBoundary
        qualifiedName: AbatabData.Module.QuickMedOrder.DoseMilligramsBoundary
      VB:
      - id: AbatabData.Module.QuickMedOrder.DoseMilligramsBoundary*
        name: DoseMilligramsBoundary
        nameWithType: QuickMedOrder.DoseMilligramsBoundary
        qualifiedName: AbatabData.Module.QuickMedOrder.DoseMilligramsBoundary
    isDefinition: true
    commentId: Overload:AbatabData.Module.QuickMedOrder.DoseMilligramsBoundary
  AbatabData.Module.QuickMedOrder.PrevDosePrefix*:
    name:
      CSharp:
      - id: AbatabData.Module.QuickMedOrder.PrevDosePrefix*
        name: PrevDosePrefix
        nameWithType: QuickMedOrder.PrevDosePrefix
        qualifiedName: AbatabData.Module.QuickMedOrder.PrevDosePrefix
      VB:
      - id: AbatabData.Module.QuickMedOrder.PrevDosePrefix*
        name: PrevDosePrefix
        nameWithType: QuickMedOrder.PrevDosePrefix
        qualifiedName: AbatabData.Module.QuickMedOrder.PrevDosePrefix
    isDefinition: true
    commentId: Overload:AbatabData.Module.QuickMedOrder.PrevDosePrefix
  AbatabData.Module.QuickMedOrder.PrevDoseSuffix*:
    name:
      CSharp:
      - id: AbatabData.Module.QuickMedOrder.PrevDoseSuffix*
        name: PrevDoseSuffix
        nameWithType: QuickMedOrder.PrevDoseSuffix
        qualifiedName: AbatabData.Module.QuickMedOrder.PrevDoseSuffix
      VB:
      - id: AbatabData.Module.QuickMedOrder.PrevDoseSuffix*
        name: PrevDoseSuffix
        nameWithType: QuickMedOrder.PrevDoseSuffix
        qualifiedName: AbatabData.Module.QuickMedOrder.PrevDoseSuffix
    isDefinition: true
    commentId: Overload:AbatabData.Module.QuickMedOrder.PrevDoseSuffix
  AbatabData.Module.QuickMedOrder.DosageOneFieldId*:
    name:
      CSharp:
      - id: AbatabData.Module.QuickMedOrder.DosageOneFieldId*
        name: DosageOneFieldId
        nameWithType: QuickMedOrder.DosageOneFieldId
        qualifiedName: AbatabData.Module.QuickMedOrder.DosageOneFieldId
      VB:
      - id: AbatabData.Module.QuickMedOrder.DosageOneFieldId*
        name: DosageOneFieldId
        nameWithType: QuickMedOrder.DosageOneFieldId
        qualifiedName: AbatabData.Module.QuickMedOrder.DosageOneFieldId
    isDefinition: true
    commentId: Overload:AbatabData.Module.QuickMedOrder.DosageOneFieldId
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  AbatabData.Module.QuickMedOrder.FoundDosageOneFieldId*:
    name:
      CSharp:
      - id: AbatabData.Module.QuickMedOrder.FoundDosageOneFieldId*
        name: FoundDosageOneFieldId
        nameWithType: QuickMedOrder.FoundDosageOneFieldId
        qualifiedName: AbatabData.Module.QuickMedOrder.FoundDosageOneFieldId
      VB:
      - id: AbatabData.Module.QuickMedOrder.FoundDosageOneFieldId*
        name: FoundDosageOneFieldId
        nameWithType: QuickMedOrder.FoundDosageOneFieldId
        qualifiedName: AbatabData.Module.QuickMedOrder.FoundDosageOneFieldId
    isDefinition: true
    commentId: Overload:AbatabData.Module.QuickMedOrder.FoundDosageOneFieldId
  AbatabData.Module.QuickMedOrder.CurrentDose*:
    name:
      CSharp:
      - id: AbatabData.Module.QuickMedOrder.CurrentDose*
        name: CurrentDose
        nameWithType: QuickMedOrder.CurrentDose
        qualifiedName: AbatabData.Module.QuickMedOrder.CurrentDose
      VB:
      - id: AbatabData.Module.QuickMedOrder.CurrentDose*
        name: CurrentDose
        nameWithType: QuickMedOrder.CurrentDose
        qualifiedName: AbatabData.Module.QuickMedOrder.CurrentDose
    isDefinition: true
    commentId: Overload:AbatabData.Module.QuickMedOrder.CurrentDose
  AbatabData.Module.QuickMedOrder.OrderTypeFieldId*:
    name:
      CSharp:
      - id: AbatabData.Module.QuickMedOrder.OrderTypeFieldId*
        name: OrderTypeFieldId
        nameWithType: QuickMedOrder.OrderTypeFieldId
        qualifiedName: AbatabData.Module.QuickMedOrder.OrderTypeFieldId
      VB:
      - id: AbatabData.Module.QuickMedOrder.OrderTypeFieldId*
        name: OrderTypeFieldId
        nameWithType: QuickMedOrder.OrderTypeFieldId
        qualifiedName: AbatabData.Module.QuickMedOrder.OrderTypeFieldId
    isDefinition: true
    commentId: Overload:AbatabData.Module.QuickMedOrder.OrderTypeFieldId
  AbatabData.Module.QuickMedOrder.FoundOrderTypeFieldId*:
    name:
      CSharp:
      - id: AbatabData.Module.QuickMedOrder.FoundOrderTypeFieldId*
        name: FoundOrderTypeFieldId
        nameWithType: QuickMedOrder.FoundOrderTypeFieldId
        qualifiedName: AbatabData.Module.QuickMedOrder.FoundOrderTypeFieldId
      VB:
      - id: AbatabData.Module.QuickMedOrder.FoundOrderTypeFieldId*
        name: FoundOrderTypeFieldId
        nameWithType: QuickMedOrder.FoundOrderTypeFieldId
        qualifiedName: AbatabData.Module.QuickMedOrder.FoundOrderTypeFieldId
    isDefinition: true
    commentId: Overload:AbatabData.Module.QuickMedOrder.FoundOrderTypeFieldId
  AbatabData.Module.QuickMedOrder.OrderType*:
    name:
      CSharp:
      - id: AbatabData.Module.QuickMedOrder.OrderType*
        name: OrderType
        nameWithType: QuickMedOrder.OrderType
        qualifiedName: AbatabData.Module.QuickMedOrder.OrderType
      VB:
      - id: AbatabData.Module.QuickMedOrder.OrderType*
        name: OrderType
        nameWithType: QuickMedOrder.OrderType
        qualifiedName: AbatabData.Module.QuickMedOrder.OrderType
    isDefinition: true
    commentId: Overload:AbatabData.Module.QuickMedOrder.OrderType
  AbatabData.Module.QuickMedOrder.LastOrderScheduleFieldId*:
    name:
      CSharp:
      - id: AbatabData.Module.QuickMedOrder.LastOrderScheduleFieldId*
        name: LastOrderScheduleFieldId
        nameWithType: QuickMedOrder.LastOrderScheduleFieldId
        qualifiedName: AbatabData.Module.QuickMedOrder.LastOrderScheduleFieldId
      VB:
      - id: AbatabData.Module.QuickMedOrder.LastOrderScheduleFieldId*
        name: LastOrderScheduleFieldId
        nameWithType: QuickMedOrder.LastOrderScheduleFieldId
        qualifiedName: AbatabData.Module.QuickMedOrder.LastOrderScheduleFieldId
    isDefinition: true
    commentId: Overload:AbatabData.Module.QuickMedOrder.LastOrderScheduleFieldId
  AbatabData.Module.QuickMedOrder.FoundLastOrderScheduleFieldId*:
    name:
      CSharp:
      - id: AbatabData.Module.QuickMedOrder.FoundLastOrderScheduleFieldId*
        name: FoundLastOrderScheduleFieldId
        nameWithType: QuickMedOrder.FoundLastOrderScheduleFieldId
        qualifiedName: AbatabData.Module.QuickMedOrder.FoundLastOrderScheduleFieldId
      VB:
      - id: AbatabData.Module.QuickMedOrder.FoundLastOrderScheduleFieldId*
        name: FoundLastOrderScheduleFieldId
        nameWithType: QuickMedOrder.FoundLastOrderScheduleFieldId
        qualifiedName: AbatabData.Module.QuickMedOrder.FoundLastOrderScheduleFieldId
    isDefinition: true
    commentId: Overload:AbatabData.Module.QuickMedOrder.FoundLastOrderScheduleFieldId
  AbatabData.Module.QuickMedOrder.LastOrderScheduleText*:
    name:
      CSharp:
      - id: AbatabData.Module.QuickMedOrder.LastOrderScheduleText*
        name: LastOrderScheduleText
        nameWithType: QuickMedOrder.LastOrderScheduleText
        qualifiedName: AbatabData.Module.QuickMedOrder.LastOrderScheduleText
      VB:
      - id: AbatabData.Module.QuickMedOrder.LastOrderScheduleText*
        name: LastOrderScheduleText
        nameWithType: QuickMedOrder.LastOrderScheduleText
        qualifiedName: AbatabData.Module.QuickMedOrder.LastOrderScheduleText
    isDefinition: true
    commentId: Overload:AbatabData.Module.QuickMedOrder.LastOrderScheduleText
  AbatabData.Module.QuickMedOrder.LastScheduledDosage*:
    name:
      CSharp:
      - id: AbatabData.Module.QuickMedOrder.LastScheduledDosage*
        name: LastScheduledDosage
        nameWithType: QuickMedOrder.LastScheduledDosage
        qualifiedName: AbatabData.Module.QuickMedOrder.LastScheduledDosage
      VB:
      - id: AbatabData.Module.QuickMedOrder.LastScheduledDosage*
        name: LastScheduledDosage
        nameWithType: QuickMedOrder.LastScheduledDosage
        qualifiedName: AbatabData.Module.QuickMedOrder.LastScheduledDosage
    isDefinition: true
    commentId: Overload:AbatabData.Module.QuickMedOrder.LastScheduledDosage
  AbatabData.Module.QuickMedOrder.FoundAllRequiredFieldIds*:
    name:
      CSharp:
      - id: AbatabData.Module.QuickMedOrder.FoundAllRequiredFieldIds*
        name: FoundAllRequiredFieldIds
        nameWithType: QuickMedOrder.FoundAllRequiredFieldIds
        qualifiedName: AbatabData.Module.QuickMedOrder.FoundAllRequiredFieldIds
      VB:
      - id: AbatabData.Module.QuickMedOrder.FoundAllRequiredFieldIds*
        name: FoundAllRequiredFieldIds
        nameWithType: QuickMedOrder.FoundAllRequiredFieldIds
        qualifiedName: AbatabData.Module.QuickMedOrder.FoundAllRequiredFieldIds
    isDefinition: true
    commentId: Overload:AbatabData.Module.QuickMedOrder.FoundAllRequiredFieldIds
