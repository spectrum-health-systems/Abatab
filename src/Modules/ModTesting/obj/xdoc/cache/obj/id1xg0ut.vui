id: ModTesting
language: CSharp
name:
  Default: ModTesting
qualifiedName:
  Default: ModTesting
type: Assembly
modifiers: {}
items:
- id: ModTesting
  commentId: N:ModTesting
  language: CSharp
  name:
    CSharp: ModTesting
    VB: ModTesting
  nameWithType:
    CSharp: ModTesting
    VB: ModTesting
  qualifiedName:
    CSharp: ModTesting
    VB: ModTesting
  type: Namespace
  assemblies:
  - ModTesting
  modifiers: {}
  items:
  - id: ModTesting.DataDump
    commentId: T:ModTesting.DataDump
    language: CSharp
    name:
      CSharp: DataDump
      VB: DataDump
    nameWithType:
      CSharp: DataDump
      VB: DataDump
    qualifiedName:
      CSharp: ModTesting.DataDump
      VB: ModTesting.DataDump
    type: Class
    assemblies:
    - ModTesting
    namespace: ModTesting
    source:
      id: DataDump
      path: C:\IT\GitHub\SHS\Abatab\src\Modules\ModTesting\DataDump.cs
      startLine: 14
    summary: "\nLogic for the Testing module.\n"
    example: []
    syntax:
      content:
        CSharp: public static class DataDump
        VB: Public Module DataDump
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: ModTesting.DataDump.SessionData(AbatabData.Session)
      commentId: M:ModTesting.DataDump.SessionData(AbatabData.Session)
      language: CSharp
      name:
        CSharp: SessionData(Session)
        VB: SessionData(Session)
      nameWithType:
        CSharp: DataDump.SessionData(Session)
        VB: DataDump.SessionData(Session)
      qualifiedName:
        CSharp: ModTesting.DataDump.SessionData(AbatabData.Session)
        VB: ModTesting.DataDump.SessionData(AbatabData.Session)
      type: Method
      assemblies:
      - ModTesting
      namespace: ModTesting
      source:
        id: SessionData
        path: C:\IT\GitHub\SHS\Abatab\src\Modules\ModTesting\DataDump.cs
        startLine: 21
      summary: "\nCreate a data dump for this session.\n"
      example: []
      syntax:
        content:
          CSharp: public static void SessionData(Session abatabSession)
          VB: Public Shared Sub SessionData(abatabSession As Session)
        parameters:
        - id: abatabSession
          type: AbatabData.Session
          description: Information/data for this session of Abatab.
      overload: ModTesting.DataDump.SessionData*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: ModTesting.Roundhouse
    commentId: T:ModTesting.Roundhouse
    language: CSharp
    name:
      CSharp: Roundhouse
      VB: Roundhouse
    nameWithType:
      CSharp: Roundhouse
      VB: Roundhouse
    qualifiedName:
      CSharp: ModTesting.Roundhouse
      VB: ModTesting.Roundhouse
    type: Class
    assemblies:
    - ModTesting
    namespace: ModTesting
    source:
      id: Roundhouse
      path: C:\IT\GitHub\SHS\Abatab\src\Modules\ModTesting\Roundhouse.cs
      startLine: 14
    summary: "\nRoundhouse logic for the Testing module.\n"
    example: []
    syntax:
      content:
        CSharp: public static class Roundhouse
        VB: Public Module Roundhouse
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: ModTesting.Roundhouse.ParseRequest(AbatabData.Session)
      commentId: M:ModTesting.Roundhouse.ParseRequest(AbatabData.Session)
      language: CSharp
      name:
        CSharp: ParseRequest(Session)
        VB: ParseRequest(Session)
      nameWithType:
        CSharp: Roundhouse.ParseRequest(Session)
        VB: Roundhouse.ParseRequest(Session)
      qualifiedName:
        CSharp: ModTesting.Roundhouse.ParseRequest(AbatabData.Session)
        VB: ModTesting.Roundhouse.ParseRequest(AbatabData.Session)
      type: Method
      assemblies:
      - ModTesting
      namespace: ModTesting
      source:
        id: ParseRequest
        path: C:\IT\GitHub\SHS\Abatab\src\Modules\ModTesting\Roundhouse.cs
        startLine: 20
      summary: "\nParse the Abatab request command.\n"
      example: []
      syntax:
        content:
          CSharp: public static void ParseRequest(Session abatabSession)
          VB: Public Shared Sub ParseRequest(abatabSession As Session)
        parameters:
        - id: abatabSession
          type: AbatabData.Session
          description: Information/data for this session of Abatab.
      overload: ModTesting.Roundhouse.ParseRequest*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  AbatabData:
    name:
      CSharp:
      - name: AbatabData
        nameWithType: AbatabData
        qualifiedName: AbatabData
      VB:
      - name: AbatabData
        nameWithType: AbatabData
        qualifiedName: AbatabData
    isDefinition: true
    commentId: N:AbatabData
  AbatabData.Session:
    name:
      CSharp:
      - id: AbatabData.Session
        name: Session
        nameWithType: Session
        qualifiedName: AbatabData.Session
      VB:
      - id: AbatabData.Session
        name: Session
        nameWithType: Session
        qualifiedName: AbatabData.Session
    isDefinition: true
    parent: AbatabData
    commentId: T:AbatabData.Session
  ModTesting.DataDump.SessionData*:
    name:
      CSharp:
      - id: ModTesting.DataDump.SessionData*
        name: SessionData
        nameWithType: DataDump.SessionData
        qualifiedName: ModTesting.DataDump.SessionData
      VB:
      - id: ModTesting.DataDump.SessionData*
        name: SessionData
        nameWithType: DataDump.SessionData
        qualifiedName: ModTesting.DataDump.SessionData
    isDefinition: true
    commentId: Overload:ModTesting.DataDump.SessionData
  ModTesting.DataDump:
    name:
      CSharp:
      - id: ModTesting.DataDump
        name: DataDump
        nameWithType: DataDump
        qualifiedName: ModTesting.DataDump
      VB:
      - id: ModTesting.DataDump
        name: DataDump
        nameWithType: DataDump
        qualifiedName: ModTesting.DataDump
    isDefinition: true
    commentId: T:ModTesting.DataDump
  ModTesting.Roundhouse.ParseRequest*:
    name:
      CSharp:
      - id: ModTesting.Roundhouse.ParseRequest*
        name: ParseRequest
        nameWithType: Roundhouse.ParseRequest
        qualifiedName: ModTesting.Roundhouse.ParseRequest
      VB:
      - id: ModTesting.Roundhouse.ParseRequest*
        name: ParseRequest
        nameWithType: Roundhouse.ParseRequest
        qualifiedName: ModTesting.Roundhouse.ParseRequest
    isDefinition: true
    commentId: Overload:ModTesting.Roundhouse.ParseRequest
  ModTesting.Roundhouse:
    name:
      CSharp:
      - id: ModTesting.Roundhouse
        name: Roundhouse
        nameWithType: Roundhouse
        qualifiedName: ModTesting.Roundhouse
      VB:
      - id: ModTesting.Roundhouse
        name: Roundhouse
        nameWithType: Roundhouse
        qualifiedName: ModTesting.Roundhouse
    isDefinition: true
    commentId: T:ModTesting.Roundhouse
  ModTesting:
    name:
      CSharp:
      - name: ModTesting
        nameWithType: ModTesting
        qualifiedName: ModTesting
      VB:
      - name: ModTesting
        nameWithType: ModTesting
        qualifiedName: ModTesting
    isDefinition: true
    commentId: N:ModTesting
