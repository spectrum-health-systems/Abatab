<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Abatab</name>
    </assembly>
    <members>
        <member name="T:Abatab.Abatab">
            <summary>
              <para>
                The main Abatab project, and where the magic starts.
              </para>
              <para>
                Abatab receives two things from Avatar:
                <br/>
                1. An <c>OptionObject</c>, which contains all of the information that Abatab needs to do it's thing, and
                <br/>
                2. A <c>Script Parameter</c> that tells Abatab what it needs to do with the OptionObject.
              </para>
              <para>
                For more information about OptionObjects and Script Parameters, please see the <see href="../man/index.html">Abatab Manual.</see>
              </para>
            </summary>
        </member>
        <member name="M:Abatab.Abatab.GetVersion">
            <summary>
            Returns the current version of Abatab.
            </summary>
            <returns>The current version of Abatab.</returns>
            <remarks>
            * This method is required by Avatar.
            * The version number is always the version that is in development. For example, while developing
              v1.0, this will return <c>1.0</c>.
            </remarks>
        </member>
        <member name="M:Abatab.Abatab.RunScript(NTST.ScriptLinkService.Objects.OptionObject2015,System.String)">
            <summary>
            Executes script parameter request from Avatar, then returns a potentially modified OptionObject to
            Avatar.
            </summary>
            <param name="sentOptionObject">The original OptionObject sent from Avatar.</param>
            <param name="scriptParameter">The original Script Parameter request from Avatar.</param>
            <returns>A finalized OptionObject that will be returned to Avatar.</returns>
            <remarks>
            * This method is required by Avatar.
            * This is the only time a <see href="../man/Logging/man-Logging-Home.html#primeval-debug-log">Primeval debug log</see> is written.
            * This method should remain fairly static, since most of the logic is taken care of by external
            projects.
            </remarks>
        </member>
        <member name="T:Abatab.Roundhouse">
            <summary>
              <para>
                Roundhouse classes determine what should be done with the Script Parameter sent from Avatar. This
                particular Roundhouse class determines what should be done with the Module component.
              </para>
              <para>
                For example, <c>QuickMedOrder-Dose-VerifyAmount</c> would be sent to the Roundhouse class of the
                ModQuickMedOrder module, where it would be processed further.
              </para>
            </summary>
        </member>
        <member name="M:Abatab.Roundhouse.ParseRequest(AbatabData.Session)">
            <summary>
            Determines which Abatab Module should get the Command-Action-Option components of the Script Parameter sent from Avatar.
            </summary>
            <param name="abatabSession">Settings and data for this session of Abatab.</param>
            <remarks>
            * The only component of the Script Parameter sent from Avatar that matters at this point is the AbatabMethod component.
            * Whenever a new Abatab Module is added, logic will need to be added to the switch statement using the following template:
            <code>
            case "%newmodule-name%":
                LogEvent.Trace(abatabSession, Assembly.GetExecutingAssembly().GetName().Name, "[TRACE]");
                ModNewModule.Roundhouse.ParseRequest(abatabSession);
                break;
            </code>
            </remarks>
        </member>
        <member name="T:Abatab.WebConfig">
            <summary>
              <para>
                Abatab stores configuration settings in the local Web.config file. This class loads those settings.
              </para>
            </summary>
        </member>
        <member name="M:Abatab.WebConfig.Load">
            <summary>
            Load the settings from the local Web.config file.
            </summary>
            <returns>A dictionary containing the settings from Web.config.</returns>
            <remarks>
            * Whenever a new value is added/removed to Properties/Settings.settings, it needs to be added/removed here as well.
            * Configuration settings details can be found <see href="../man/Configuration/man-Configuration-LocalSettings.html">here.</see>
            * Settings are trimmed and converted to lowercase. <see href="../man/SourceCode/man-SourceCode-Home.html#casing-and-trimming">[more info]</see>
            </remarks>
        </member>
    </members>
</doc>
