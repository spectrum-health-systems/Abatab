### YamlMime:ManagedReference
items:
- uid: ModCommon.VerifyAccess
  commentId: T:ModCommon.VerifyAccess
  id: VerifyAccess
  parent: ModCommon
  children:
  - ModCommon.VerifyAccess.CheckIfValidUser(System.String,System.String)
  - ModCommon.VerifyAccess.InvalidUser(AbatabData.Session)
  langs:
  - csharp
  - vb
  name: VerifyAccess
  nameWithType: VerifyAccess
  fullName: ModCommon.VerifyAccess
  type: Class
  source:
    id: VerifyAccess
    path: C:\IT\GitHub\SHS\Abatab\src\Modules\ModCommon\VerifyAccess.cs
    startLine: 13
  assemblies:
  - ModCommon
  namespace: ModCommon
  summary: "\n\n"
  example: []
  syntax:
    content: public class VerifyAccess
    content.vb: Public Class VerifyAccess
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ModCommon.VerifyAccess.CheckIfValidUser(System.String,System.String)
  commentId: M:ModCommon.VerifyAccess.CheckIfValidUser(System.String,System.String)
  id: CheckIfValidUser(System.String,System.String)
  parent: ModCommon.VerifyAccess
  langs:
  - csharp
  - vb
  name: CheckIfValidUser(String, String)
  nameWithType: VerifyAccess.CheckIfValidUser(String, String)
  fullName: ModCommon.VerifyAccess.CheckIfValidUser(System.String, System.String)
  type: Method
  source:
    id: CheckIfValidUser
    path: C:\IT\GitHub\SHS\Abatab\src\Modules\ModCommon\VerifyAccess.cs
    startLine: 21
  assemblies:
  - ModCommon
  namespace: ModCommon
  summary: "\n\n"
  example: []
  syntax:
    content: public static bool CheckIfValidUser(string abatabUser, string validUsers)
    parameters:
    - id: abatabUser
      type: System.String
      description: ''
    - id: validUsers
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function CheckIfValidUser(abatabUser As String, validUsers As String) As Boolean
  overload: ModCommon.VerifyAccess.CheckIfValidUser*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: ModCommon.VerifyAccess.InvalidUser(AbatabData.Session)
  commentId: M:ModCommon.VerifyAccess.InvalidUser(AbatabData.Session)
  id: InvalidUser(AbatabData.Session)
  parent: ModCommon.VerifyAccess
  langs:
  - csharp
  - vb
  name: InvalidUser(Session)
  nameWithType: VerifyAccess.InvalidUser(Session)
  fullName: ModCommon.VerifyAccess.InvalidUser(AbatabData.Session)
  type: Method
  source:
    id: InvalidUser
    path: C:\IT\GitHub\SHS\Abatab\src\Modules\ModCommon\VerifyAccess.cs
    startLine: 31
  assemblies:
  - ModCommon
  namespace: ModCommon
  summary: "\n\n"
  example: []
  syntax:
    content: public static void InvalidUser(Session abatabSession)
    parameters:
    - id: abatabSession
      type: AbatabData.Session
      description: ''
    content.vb: Public Shared Sub InvalidUser(abatabSession As Session)
  overload: ModCommon.VerifyAccess.InvalidUser*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: ModCommon
  commentId: N:ModCommon
  name: ModCommon
  nameWithType: ModCommon
  fullName: ModCommon
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ModCommon.VerifyAccess.CheckIfValidUser*
  commentId: Overload:ModCommon.VerifyAccess.CheckIfValidUser
  name: CheckIfValidUser
  nameWithType: VerifyAccess.CheckIfValidUser
  fullName: ModCommon.VerifyAccess.CheckIfValidUser
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: ModCommon.VerifyAccess.InvalidUser*
  commentId: Overload:ModCommon.VerifyAccess.InvalidUser
  name: InvalidUser
  nameWithType: VerifyAccess.InvalidUser
  fullName: ModCommon.VerifyAccess.InvalidUser
- uid: AbatabData.Session
  commentId: T:AbatabData.Session
  parent: AbatabData
  name: Session
  nameWithType: Session
  fullName: AbatabData.Session
- uid: AbatabData
  commentId: N:AbatabData
  name: AbatabData
  nameWithType: AbatabData
  fullName: AbatabData
